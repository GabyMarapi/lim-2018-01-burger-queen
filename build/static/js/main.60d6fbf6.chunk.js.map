{"version":3,"sources":["components/HeaderOrder.js","components/ListMenu.js","components/TabMenu.js","components/OrderDetail.js","components/Total.js","App.js","serviceWorker.js","index.js"],"names":["headerOrder","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","setState","prevState","dropdownOpen","state","_this2","react_default","a","createElement","reactstrap_es","xs","sm","md","placeholder","onChange","e","onInputName","target","value","Component","ListMenu","_ref","menus","onAddOrder","console","log","className","map","menu","i","key","id","body","onClick","name","price","TabMenu","changeFlag","flag","flagActive","listTabs","tabs","elem","style","cursor","classnames","active","changeCategory","keys","reverse","React","OrderDetail","orderDetail","deteleOrder","hover","order","scope","count","color","Total","total","size","offset","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","firestore","settings","timestampsInSnapshots","App","getCategory","collection","getMenus","category","doc","get","updateListMenus","then","docs","arr","obj","forEach","data","push","listMenus","handleOnInputName","input","inputName","handleOnAddOrder","index","currentTarget","objMenu","ind","updateTotal","concat","reduce","b","handleChangeCategory","handleDeleteOrder","filter","elm","handleSaveOrder","add","client","result","cleanOrderDetail","listCategory","clientName","date","defineProperty","HeaderOrder_headerOrder","TabMenu_TabMenu","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.60d6fbf6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col, Input } from 'reactstrap';\r\n\r\nexport default class headerOrder extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tdropdownOpen: false\r\n\t\t};\r\n\t}\r\n\r\n\ttoggle = () => {\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tdropdownOpen: !prevState.dropdownOpen\r\n\t\t}));\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Row>\r\n\t\t\t\t<Col xs=\"6\" sm=\"6\" md=\"6\">\r\n\t\t\t\t<label></label><Input \r\n\t\t\t\t\tplaceholder=\"Ingresar nombre del cliente\" \r\n\t\t\t\t\tonChange={(e)=>this.props.onInputName(e.target.value)}/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row >\r\n\t\t)\r\n\t}\r\n\r\n}","import React from 'react';\r\nimport { Card, CardTitle, CardText, Col } from 'reactstrap';\r\n\r\nexport default ({ menus, onAddOrder }) => {\r\n  console.log(menus);\r\n\r\n  return (\r\n    <div className='row container-fluid'>\r\n      {\r\n        menus\r\n          .map((menu,i) =>\r\n            <Col sm=\"6\" key={menu.id} >\r\n              <Card body id={i} onClick={onAddOrder}>\r\n                <CardTitle >{menu.name}</CardTitle>\r\n                <CardText >S/. {menu.price}.00</CardText>\r\n              </Card>\r\n              \r\n            </Col>\r\n          )\r\n      }\r\n    </div>\r\n\r\n\r\n\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Nav, NavItem, NavLink,  } from 'reactstrap';\r\nimport classnames from 'classnames';\r\n\r\nexport default class TabMenu extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      listTabs: this.props.listTabs,\r\n      flagActive: 2\r\n    }\r\n  }\r\n\r\n  changeFlag = (flag) => {\r\n    this.setState({\r\n      flagActive: flag\r\n    })\r\n  }\r\n  render() {\r\n    let { flagActive } = this.state\r\n    return (\r\n      \r\n        <Nav tabs>\r\n          {this.state.listTabs.map((elem, i) =>\r\n            <NavItem \r\n            key={i}\r\n            style={{cursor : 'pointer'}}\r\n            >\r\n              <NavLink\r\n                className={classnames({ active: flagActive === i })}\r\n                onClick={() => \r\n                  {\r\n                    this.changeFlag(i)\r\n                    this.props.changeCategory(Object.keys(elem)[0])\r\n                  }\r\n                }\r\n              >\r\n                {elem[Object.keys(elem)[0]].name}\r\n              </NavLink>\r\n            </NavItem>\r\n          ).reverse()}\r\n        </Nav>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { Table, Button } from 'reactstrap';\r\n\r\n// const listStyle = {\r\n// \tdisplay: 'flex',\r\n// \tflexDirection: 'row',\r\n// \tjustifyContent: 'space-between'\r\n// }\r\n\r\nexport default ({ orderDetail, deteleOrder }) => {\r\n\r\n\treturn (\r\n\r\n\t\t<Table hover>\r\n\t\t\t<thead>\r\n\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>#</th>\r\n\t\t\t\t\t<th>Nombre</th>\r\n\t\t\t\t\t<th>S/.</th>\r\n\t\t\t\t\t<th>Cant.</th>\r\n\t\t\t\t\t<th>Tot.</th>\r\n\t\t\t\t\t<th>   </th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\r\n\t\t\t\t{orderDetail\r\n\t\t\t\t\t.map((order, i) =>\r\n\t\t\t\t\t\t<tr key={i}>\r\n\t\t\t\t\t\t\t<th scope=\"row\">{i + 1}</th>\r\n\t\t\t\t\t\t\t<td>{order.name}</td>\r\n\t\t\t\t\t\t\t<td>{order.price}.00</td>\r\n\t\t\t\t\t\t\t<td>{order.count}</td>\r\n\t\t\t\t\t\t\t<td>{order.count * order.price}</td>\r\n\t\t\t\t\t\t\t<td><Button \r\n\t\t\t\t\t\t\tcolor=\"link\"\r\n\t\t\t\t\t\t\tonClick={()=>deteleOrder(i)}\r\n\t\t\t\t\t\t\t><i className=\"fas fa-trash\"></i></Button></td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</tbody>\r\n\t\t</Table>\r\n\r\n\t)\r\n\r\n}","import React from 'react';\r\nimport { Row, Col } from 'reactstrap'\r\n\r\nexport default ({ total }) => {\r\n\r\n    return (\r\n            <div>\r\n                <Row>\r\n                    <Col sm={{ size: 'auto', offset: 1 }}> Total    S/.  {total}</Col>\r\n                </Row>\r\n            </div>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport firebase from 'firebase';\r\nimport { Container, Button, Row, Col } from 'reactstrap';\r\nimport HeaderOrder from './components/HeaderOrder';\r\nimport ListMenu from './components/ListMenu';\r\nimport TabMenu from './components/TabMenu';\r\nimport OrderDetail from './components/OrderDetail';\r\nimport Total from './components/Total';\r\n\r\n\r\nfirebase.initializeApp({\r\n  apiKey: \"AIzaSyDk55mWsIWR6tUb6cKBsvTbbC4oAG2HuVU\",\r\n  authDomain: \"burgerqueen-54705.firebaseapp.com\",\r\n  databaseURL: \"https://burgerqueen-54705.firebaseio.com\",\r\n  projectId: \"burgerqueen-54705\",\r\n  storageBucket: \"burgerqueen-54705.appspot.com\",\r\n  messagingSenderId: \"774270877260\"\r\n});\r\n\r\nconst db = firebase.firestore();\r\ndb.settings({\r\n  timestampsInSnapshots: true\r\n});\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      inputName: '',\r\n      listMenus: [],\r\n      listCategory:[],\r\n      menus:{\r\n        listCategory: [],\r\n        listMenus: []\r\n      },\r\n      order:{\r\n        clientName: null,\r\n        date: null,\r\n        total: 0,\r\n        orderDetail:[]\r\n      },\r\n      orderDetail: [],\r\n      total: 0\r\n    }\r\n  }\r\n\r\n  getCategory = () => db.collection(\"CategoryMenu\")\r\n\r\n  getMenus = (category) => this.getCategory().doc(category).collection(category).get()\r\n\r\n  updateListMenus = (category) => {\r\n\r\n\r\n\r\n    this.getMenus(category).then((docs) => {\r\n      const arr = []\r\n      let obj = {}\r\n      docs.forEach(doc => {\r\n        obj = doc.data()\r\n        obj.id = doc.id\r\n        arr.push(obj)\r\n      })\r\n      this.setState({\r\n        listMenus: arr\r\n      })\r\n    })\r\n  }\r\n  componentDidMount() {\r\n\r\n\r\n    this.getCategory().get().then((docs) => {\r\n      const { listCategory } = this.state\r\n      docs.forEach(doc => {\r\n        listCategory.push(\r\n          {\r\n            [doc.id]: doc.data()\r\n          }\r\n        )\r\n      console.log(doc);\r\n\r\n      })\r\n      \r\n\r\n      this.setState({\r\n        listCategory\r\n      })\r\n    })\r\n    this.updateListMenus('Desayuno')\r\n  }\r\n\r\n  handleOnInputName = (input) => {\r\n    this.setState({\r\n      inputName: input\r\n    })\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  handleOnAddOrder = (e) => {\r\n    const index = e.currentTarget.id\r\n    const { orderDetail } = this.state\r\n    const objMenu = this.state.listMenus[index]\r\n    let ind = null\r\n\r\n    orderDetail.forEach((elem, i) => {\r\n      if (elem.id === objMenu.id) {\r\n        ind = i\r\n      }\r\n    })\r\n\r\n    if (ind !== null) {\r\n      orderDetail[ind].count++\r\n      this.setState({\r\n        orderDetail,\r\n      })\r\n      this.updateTotal(orderDetail)\r\n    }\r\n    else {\r\n      objMenu.count = 1\r\n      this.setState({\r\n        orderDetail: orderDetail.concat(objMenu),\r\n      })\r\n      this.updateTotal(orderDetail.concat(objMenu))\r\n    }\r\n  }\r\n\r\n  updateTotal = (orderDetail) => {\r\n    this.setState({\r\n      total: orderDetail.reduce((a, b) => { return a + (b.price * b.count) }, 0)\r\n    })\r\n  }\r\n\r\n  handleChangeCategory = (category) => {\r\n    this.updateListMenus(category)\r\n  }\r\n\r\n  handleDeleteOrder = (index) => {\r\n    this.setState({\r\n      orderDetail: this.state.orderDetail.filter((elm, i) => i !== index)\r\n    })\r\n  }\r\n\r\n  handleSaveOrder = () => {\r\n    db.collection(\"order\").add({\r\n      client: this.state.inputName,\r\n      total: this.state.total\r\n    })\r\n      .then(result => {\r\n        this.state.orderDetail.forEach(elem => {\r\n          db.collection(\"orderDetail\").add({\r\n            id: result.id,\r\n            menu: elem.name,\r\n            price: elem.price,\r\n            count: elem.count,\r\n            total: (elem.price * elem.count),\r\n          })\r\n        })\r\n\r\n        this.cleanOrderDetail()\r\n      }\r\n      )\r\n\r\n  }\r\n\r\n  cleanOrderDetail = () => {\r\n    this.setState({\r\n      orderDetail: [],\r\n      total: 0\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <HeaderOrder\r\n              onInputName={this.handleOnInputName}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs=\"12\" sm=\"8\" md=\"8\">\r\n            <TabMenu\r\n              listTabs={this.state.listCategory}\r\n              changeCategory={this.handleChangeCategory}\r\n            />\r\n            <ListMenu\r\n              menus={this.state.listMenus}\r\n              onAddOrder={this.handleOnAddOrder}\r\n            />\r\n          </Col>\r\n          <Col xs=\"12\" sm=\"4\" md=\"4\">\r\n            <OrderDetail\r\n              orderDetail={this.state.orderDetail}\r\n              deteleOrder={this.handleDeleteOrder}\r\n            />\r\n            <Total\r\n              total={this.state.total}\r\n            />\r\n            <Button\r\n              color=\"secondary\"\r\n              size=\"sm\"\r\n              onClick={this.handleSaveOrder}\r\n            >Ordenar</Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}